<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class BaseIssue extends sfDoctrineRecord
{
  public function setTableDefinition()
  {
    $this->setTableName('issue');
    $this->hasColumn('id', 'integer', 4, array('type' => 'integer', 'primary' => true, 'autoincrement' => true, 'length' => '4'));
    $this->hasColumn('title', 'string', 128, array('type' => 'string', 'length' => '128'));
    $this->hasColumn('project_id', 'integer', 4, array('type' => 'integer', 'length' => '4'));
    $this->hasColumn('component_id', 'integer', 4, array('type' => 'integer', 'length' => '4'));
    $this->hasColumn('assigned_to', 'integer', 4, array('type' => 'integer', 'length' => '4'));
    $this->hasColumn('is_open', 'boolean', null, array('type' => 'boolean', 'default' => true, 'notnull' => true));
    $this->hasColumn('opened_at', 'timestamp', null, array('type' => 'timestamp'));
    $this->hasColumn('opened_by', 'integer', 4, array('type' => 'integer', 'length' => '4'));
    $this->hasColumn('resolved_at', 'timestamp', null, array('type' => 'timestamp'));
    $this->hasColumn('resolved_by', 'integer', 4, array('type' => 'integer', 'length' => '4'));
    $this->hasColumn('closed_at', 'timestamp', null, array('type' => 'timestamp'));
    $this->hasColumn('closed_by', 'integer', 4, array('type' => 'integer', 'length' => '4'));
    $this->hasColumn('status_id', 'integer', 4, array('type' => 'integer', 'length' => '4'));
    $this->hasColumn('category_id', 'integer', 4, array('type' => 'integer', 'length' => '4'));
    $this->hasColumn('priority_id', 'integer', 4, array('type' => 'integer', 'length' => '4'));
    $this->hasColumn('milestone_id', 'integer', 4, array('type' => 'integer', 'length' => '4'));
    $this->hasColumn('orig_estimate', 'float', null, array('type' => 'float'));
    $this->hasColumn('curr_estimate', 'float', null, array('type' => 'float'));
    $this->hasColumn('elapsed', 'float', null, array('type' => 'float'));
    $this->hasColumn('deadline', 'timestamp', null, array('type' => 'timestamp'));
  }

  public function setUp()
  {
    $this->hasOne('Project', array('local' => 'project_id',
                                   'foreign' => 'id'));

    $this->hasOne('Component', array('local' => 'component_id',
                                     'foreign' => 'id'));

    $this->hasOne('sfGuardUser as AssignedTo', array('local' => 'assigned_to',
                                                     'foreign' => 'id'));

    $this->hasOne('sfGuardUser as OpenedBy', array('local' => 'opened_by',
                                                   'foreign' => 'id'));

    $this->hasOne('sfGuardUser as ResolvedBy', array('local' => 'resolved_by',
                                                     'foreign' => 'id'));

    $this->hasOne('sfGuardUser as ClosedBy', array('local' => 'closed_by',
                                                   'foreign' => 'id'));

    $this->hasOne('Status', array('local' => 'status_id',
                                  'foreign' => 'id'));

    $this->hasOne('Category', array('local' => 'category_id',
                                    'foreign' => 'id'));

    $this->hasOne('Priority', array('local' => 'priority_id',
                                    'foreign' => 'id'));

    $this->hasOne('Milestone', array('local' => 'milestone_id',
                                     'foreign' => 'id'));

    $this->hasMany('IssueActivity as Activities', array('local' => 'id',
                                                        'foreign' => 'issue_id'));
  }
}